{"remainingRequest":"F:\\GitHub\\Vue-project\\web-store\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\GitHub\\Vue-project\\web-store\\src\\components\\ItemShopCart.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"F:\\GitHub\\Vue-project\\web-store\\src\\components\\ItemShopCart.vue","mtime":1605651350715},{"path":"F:\\GitHub\\Vue-project\\web-store\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\GitHub\\Vue-project\\web-store\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\GitHub\\Vue-project\\web-store\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\GitHub\\Vue-project\\web-store\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\GitHub\\Vue-project\\web-store\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5pdGVtX19uYW1lOmhvdmVyIHsNCiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7DQp9DQo="},{"version":3,"sources":["ItemShopCart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA","file":"ItemShopCart.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n   <div class=\"prodHeaders row col-12 d-flex justify-content-between mt-4 mb-3 text-uppercase\">\r\n        <div class=\"row col-5 img-responsive\">\r\n            <div class=\"productDet d-flex\">\r\n                <router-link :to=\"{name: 'SinglePage', params: item}\">\r\n                    <img :src=\"item.img\" :alt=\"item.title\">\r\n                </router-link>\r\n                <div class=\"ProdDetText d-flex flex-column ml-3 text-capitalize \">\r\n                    <router-link class=\"item__name\" :to=\"{name: 'SinglePage', params: item}\">\r\n                        <h3 class=\"my-2\">{{item.title}}</h3>\r\n                    </router-link>\r\n                    <span>Color:\r\n                        <mark>{{item.color}}</mark>\r\n                    </span>\r\n                    <span>Size:\r\n                        <mark>{{item.size}}</mark>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row col-7 d-flex\"><span\r\n                class=\"col-12 col-md-3 d-flex justify-content-center align-items-center\">${{+item.price}}</span>\r\n            <div class=\"ProdHeadInp col-12 col-md-3 d-flex justify-content-center align-items-center\">\r\n                <label>\r\n                    <input\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"20\"\r\n                    step=\"1\"\r\n                    v-model.number=\"quantity\"\r\n                    @change=\"tolalQuantity(item, quantity, item.size, item.color)\"\r\n                    required pattern=\"^[0-9]+$\"\r\n                   >\r\n\r\n                </label></div>\r\n            <span class=\"col-12 col-md-2 pl-md-0 d-flex justify-content-center align-items-center\">free</span>\r\n            <span class=\"col-12 col-md-2 d-flex justify-content-center align-items-center\">${{+item.price * +item.quantity}}</span>\r\n             <button name=\"remove\" class=\"dell__Product fa fa-times-circle d-flex col-12 col-md-2 justify-content-center align-items-center\"\r\n                            @click=\"dell(item)\"\r\n                            data-id=\"${item.id}\"\r\n                            aria-hidden=\"true\">\r\n                    </button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    const Item = () => import('./Item.vue');\r\n\r\n    export default {\r\n        name: \"ItemShopCart\",\r\n        components: {\r\n            Item\r\n        },\r\n        data() {\r\n            return {\r\n                quantity: 0,\r\n            };\r\n        },\r\n         props: {\r\n            type: {\r\n                type: String,\r\n            },\r\n            item: { type: Object }\r\n        },\r\n        methods: {\r\n            tolalQuantity(item, quantity) {\r\n                this.$store.commit('tolalQuantity', {item, quantity});\r\n            },\r\n            dell(item) {\r\n                this.$store.commit('dell', item)\r\n            }\r\n        },\r\n        mounted() {\r\n             this.quantity = this.item.quantity\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n.item__name:hover {\r\n    text-decoration: none;\r\n}\r\n</style>\r\n"]}]}